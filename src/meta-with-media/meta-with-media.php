<?php

/******************************************************************************
 * 
 * Deal with the meta field
 * 
 *****************************************************************************/

/**
 * Get the meta field from the JSON file
 */
if ( file_exists( __DIR__ . '/meta-with-media.metafield.json' ) ) {
  
  $block_json = file_get_contents( 'meta-with-media.metafield.json', true );

  $json_array = $block_json 
    ? json_decode( $block_json, true ) 
    : false;
    
  $meta_field = is_array( $json_array ) && array_key_exists('metaField', $json_array) 
    ? $json_array['metaField'] 
    : 'pants';
  
} else {
  error_log( "ERROR: meta-with-media.metafield.json file not found. Logged from line" . __LINE__ . " in " . __FILE__ );
}

// Define a constant to make it easily available across functions
define( 'META_WITH_MEDIA_FIELD', $meta_field );

/**
 * Register the meta field.
 */
add_action('init', 'myprefix_meta_with_media_field');

function myprefix_meta_with_media_field() {
  register_meta(
    'post', 
    META_WITH_MEDIA_FIELD, 
    array(
      'show_in_rest' => true,
      'type' => 'integer',
      'single' => true,
      'sanitize_callback' => function($val, $key, $obj_type) {
        return intval($val);
      },
      'auth_callback' => function() { 
        return current_user_can('edit_posts');
      }
    )
  );
}

/******************************************************************************
* 
* Enqueue the script file.
* 
*****************************************************************************/

add_action( 'enqueue_block_editor_assets', 'myprefix_meta_with_media' );

function myprefix_meta_with_media() {

 if ( ! function_exists( 'register_block_type' ) ) {
   // Gutenberg is not active.
   return;
 }
 /**
  * Include the assets file, which is generated by wp-scripts
  */
 $asset_file = include( MYPREFIX_GUT_BLOCKS_PLUGIN_PATH . basename( __DIR__ ) . '/index.asset.php' );  

 wp_enqueue_script(
   'myprefix_meta_with_media_script',
   MYPREFIX_GUT_BLOCKS_PLUGIN_URL . basename( __DIR__ ) . '/index.js',
   $asset_file['dependencies'],
   $asset_file['version']
 ); 
}

/******************************************************************************
 * 
 * Use the post meta in on the front-end
 * 
 *****************************************************************************/

add_filter( 'the_content', 'myprefix_meta_with_media_filter' );

function myprefix_meta_with_media_filter( $content ) {
  $value = get_post_meta( get_the_ID(), META_WITH_MEDIA_FIELD, true );

  if ( $value ) {
    $atts = array(
      "alt" => "My meta box uploaded image."
    );

    $image = wp_get_attachment_image( $value, 'large', false, $atts );

    return $content . "<div id='meta-image'><figure class='wp-block-image size-full'>$image</figure></div>";
  } else {
      return $content;
  }
}