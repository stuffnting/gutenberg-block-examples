<?php

/******************************************************************************
 *
 *  Only enqueue index.js in the editor.
 *
 *****************************************************************************/

add_action( 'enqueue_block_editor_assets', 'myprefix_variations_query_block_editor' );

function myprefix_variations_query_block_editor() {
  
  if ( ! function_exists( 'register_block_type' ) ) {
    // Gutenberg is not active.
    return;
  }
  /**
   * Include the assets file, which is generated by wp-scripts
   */
  $asset_file = include( MYPREFIX_GUT_BLOCKS_PLUGIN_PATH . basename( __DIR__ ) . '/index.asset.php' );

  wp_enqueue_script( 
    'myprefix-variations-query-block-script', 
    MYPREFIX_GUT_BLOCKS_PLUGIN_URL . basename( __DIR__ ) . '/index.js',
    $asset_file['dependencies'],
    $asset_file['version']
  );

}

/**
 * This code adds the ability to use the query var comment_count with
 * the core/query block, that doesn't usually support it.
 */

/******************************************************************************
 * 
 * Get data from the JSON file
 * 
 *****************************************************************************/

function myprefix_get_json_data() {
  if ( file_exists( __DIR__ . '/variations-query-block.data.json' ) ) {
  
    $block_json = file_get_contents( 'variations-query-block.data.json', true );
    
    $json_array = $block_json 
      ? json_decode( $block_json, true ) 
      : false;

    if ( !$json_array ) {
      return array( 'per_page' => false, 'namespace' => false );
    }
    
    $per_page = is_array( $json_array ) && array_key_exists( 'per_page', $json_array ) 
      ? $json_array['per_page'] 
      : false;

    $namespace = is_array( $json_array ) && array_key_exists( 'namespace', $json_array ) 
      ? $json_array['namespace'] 
      : false;

    return array( 'per_page' => $per_page, 'namespace' => $namespace );
  
} else {
  error_log( "ERROR: variations-query-block.data.json file not found. Logged from line" . __LINE__ . " in " . __FILE__ );
}}

/**
 * Make the core/query block variation work on the front end. 
 * 
 * Use the pre_render_block filter to conditionally filter the blocks.
 * 
 * If the block is core/query with namespace equal to myprefix/variations-query-block
 * add a query_loop_block_vars filter to filter the query. This allows for extra 
 * query vars to be added, and existing ones to be changed.
 * 
 * Note, the default query vars are changed when the variation is registered in the JS file,
 * but PHP knows nothing about this. Therefore, make the changes to the defaults here too, 
 * as well as adding the new query vars.
 * 
 * @see https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/extending-the-query-loop-block/
 * @see https://developer.wordpress.org/reference/hooks/pre_render_block/
 * @see https://developer.wordpress.org/reference/hooks/query_loop_block_query_vars/
 */

add_filter( 'pre_render_block', 'myprefix_query_variation_front_end', 10, 3 );

function myprefix_query_variation_front_end( $pre_render, $parsed_block, $parent_block ) {

  $json_data = myprefix_get_json_data();

  // Check if the current block is our query variation using `attributes.namespace`
  if( isset( $parsed_block[ 'attrs' ][ 'namespace' ] ) && 
    $json_data['namespace'] === $parsed_block[ 'attrs' ][ 'namespace' ] ) {

    /**
     *  @see {@link https://developer.wordpress.org/reference/hooks/query_loop_block_query_vars/}
     */
    add_filter(
      'query_loop_block_query_vars',
      function( $query, $block, $page ) {
        $json_data = myprefix_get_json_data();

        // Add new attributes.query.commentCount
        $query['comment_count'] = $block->context['query']['commentCount'];

        // Change existing perPage (default is null) with attributes.perPage
        $query['posts_per_page'] = $json_data['per_page'];

        return $query;
      },
      10,
      3
    );
  }

  return null;
}

/**
 * Make the core/query block variation work in the editor.
 * 
 * This requires filtering the of the REST API arguments.
 * 
 * @see {@linkhttps://developer.wordpress.org/reference/hooks/rest_this-post_type_query/}
 */

add_filter( 'rest_post_query', 'myprefix_query_variation_editor', 10, 2 );
  
function myprefix_query_variation_editor( $args, $request ) {
  // Is this out variation with attributes.query.commentCount added?
  if ( $request->has_param( 'commentCount' ) ) {
    $args['comment_count'] = $request->get_param( 'commentCount' );
  }

  
  return $args;
};
